<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: emacs | yasuyk]]></title>
  <link href="http://yasuyk.github.io/blog/categories/emacs/atom.xml" rel="self"/>
  <link href="http://yasuyk.github.io/"/>
  <updated>2013-04-11T04:51:23+09:00</updated>
  <id>http://yasuyk.github.io/</id>
  <author>
    <name><![CDATA[yasuyk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[emacsのカーソル位置にある単語をDashで調べるには]]></title>
    <link href="http://yasuyk.github.io/blog/2013/01/17/emacs-with-dash/"/>
    <updated>2013-01-17T02:27:00+09:00</updated>
    <id>http://yasuyk.github.io/blog/2013/01/17/emacs-with-dash</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://itunes.apple.com/jp/app/dash-docs-snippets/id458034879">Dash (Docs &amp; Snippets)</a></li>
</ul>


<p> <img src="/images/2013/01/dash_icon.175x175-75.png" alt="" /></p>

<p><a href="https://itunes.apple.com/jp/app/dash-docs-snippets/id458034879">「Dash」</a> は高速なドキュメントブラウザ(とスニペット管理)です。</p>

<p>emacsのカーソル位置にある単語を、そのDashで検索するelispを紹介します。</p>

<p><div><script src='https://gist.github.com/4549131.js?file=dash.el'></script>
<noscript><pre><code>(defun dash ()
  (interactive)
  (shell-command
   (format &quot;open dash://%s&quot;
           (or (thing-at-point 'symbol) &quot;&quot;))))
</code></pre></noscript></div>
</p>

<p>シェルから "open dash://[検索語]" と実行しているだけなので、シェルを実行できるアプリならemacs以外でも利用可能です。</p>

<p>ちなみに、現在(2013/01/17)のDashの価格は450円なんですな…。</p>

<p>自分は1700円で購入しただけに、ものすごくお買い得に感じます。</p>

<p>なお、Dashの購入方法は、App Storeからフリーでインストールしたあと、設定画面から購入します。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[emacsでもMarkedでmarkdown編集が快適になった]]></title>
    <link href="http://yasuyk.github.io/blog/2013/01/16/emacs-marked/"/>
    <updated>2013-01-16T17:51:00+09:00</updated>
    <id>http://yasuyk.github.io/blog/2013/01/16/emacs-marked</id>
    <content type="html"><![CDATA[<p><a href="http://blog.glidenote.com/blog/2013/01/10/vim-quickrun-marked/">Glide Noteさんの記事</a>をみて、Markedを購入しました。</p>

<h2>気に入ったところ</h2>

<p>Glide Noteさんの記事にある<a href="http://blog.glidenote.com/blog/2013/01/10/vim-quickrun-marked/#marked">Markdedの良い点</a> に加えて、Multi-Columnというスタイルが気に入りました。</p>

<p>下記のように、Multi-Columnは複数行のスタイルとなっていて、markdownを眺めるのに便利です。</p>

<p>Multi-Columnスタイル<br/>
<img src="/images/2013/01/emacs-marked-multi-column.png" alt="" /></p>

<p>Githubスタイル<br/>
<img src="/images/2013/01/emacs-marked-github.png" alt="" /></p>

<p>スタイルの変更はキーで操作できます。</p>

<p>デフォルトの設定はGithubスタイルにしておき、markdownを見直したくなったらMulti-Columnスタイルに切り替えるという使い方をしています。</p>

<p>emacsでは次のelispで編集中のmarkdownをプレビューできます。</p>

<p><div><script src='https://gist.github.com/4545953.js'></script>
<noscript><pre><code>;; from http://support.markedapp.com/kb/how-to-tips-and-tricks/marked-bonus-pack-scripts-commands-and-bundles

(defun markdown-preview-file ()
  &quot;run Marked on the current file and revert the buffer&quot;
  (interactive)
  (shell-command
   (format &quot;open -a /Applications/Marked.app %s&quot;
       (shell-quote-argument (buffer-file-name))))
)
(global-set-key &quot;\C-cm&quot; 'markdown-preview-file)
</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
